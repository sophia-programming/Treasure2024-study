
/* ------------新しいエンドポイントを作成するときの手順（Railsの場合）------------ */
（データベースのテーブルが存在しない状態ではアプリケーションを実行できないので、通常は マイグレーションが最初 に行われる）
例）ユーザーのプロフィール情報を取得するエンドポイントを作成


1. エンドポイントの仕様を決める（自分でURLを決める）
URL: /users/:id/profile
メソッド: GET
説明: ユーザーIDを受け取り、そのユーザーのプロフィール情報を返す。



2. ルーティングを設定する
config/routes.rb
/* 以下のようにコード実装する */
Rails.application.routes.draw do
  # ユーザープロフィール用のルートを追加
  get 'users/:id/profile', to: 'users#profile', as: 'user_profile'
end

get 'users/:id/profile' で指定したパスがリクエストされた場合、UsersControllerのprofileアクションが呼ばれる



3. コントローラを作成する
app/controller/users_controller.rb

/* 以下のようにコード実装する */
class UsersController < ApplicationController
  # ユーザープロフィールを取得するアクション
  def profile
    # パスパラメータからユーザーIDを取得
    user = User.find_by(id: params[:id])

    if user
      # ユーザーが見つかった場合、JSONでプロフィール情報を返す
      render json: {
        id: user.id,
        name: user.name,
        email: user.email,
        profile_image: user.profile_image
      }, status: :ok
    else
      # ユーザーが見つからない場合、エラーレスポンスを返す
      render json: { error: 'User not found' }, status: :not_found
    end
  end
end

params[:id] でパスパラメータとして渡されたユーザーIDを取得し、それを使ってデータベースからユーザー情報を検索
ユーザーが見つかった場合は、JSONでプロフィール情報を返します。見つからない場合は404エラーレスポンスを返します。



/* --------------------------------------------------- */
・useHistory()は指定したリンクに飛びたい時に使用する
・useLocation()は現在のURLを取得したい時に使用する
・useParams()はURLパラメータを取得したい時に使用する
/* --------------------------------------------------- */